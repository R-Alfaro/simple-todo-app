{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","handleChange","delTodo","axios","delete","then","reponse","filter","addTodoItem","post","response","data","get","params","_limit","headerSpan","show","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.426f7489.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n\r\n    // componentWillUnmount() {\r\n    //     alert(\"Item about to be deleted!\");\r\n    // }\r\n\r\n    render() {\r\n\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n        }\r\n\r\n        const { completed, id, title } = this.props.todo\r\n\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input type=\"checkbox\" checked={completed} onChange={() => this.props.handleChangeProps(id)} />\r\n\r\n                <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n\r\n                <span style={this.props.todo.completed ? completedStyle : null}>{title}</span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList","import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     var x = Math.floor(Math.random() * 256);\r\n    //     var y = Math.floor(Math.random() * 256);\r\n    //     var z = Math.floor(Math.random() * 256);\r\n    //     var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n    //     if (prevProps.headerSpan !== this.props.headerSpan) {\r\n    //         document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n    //         document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const headerStyle = {\r\n            padding: \"20px 0\",\r\n            lineHeight: \"2em\",\r\n        }\r\n\r\n        return (\r\n            <header style={headerStyle}>\r\n                <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n                    Ramiro's Todo List <span id=\"inH1\"></span>\r\n                </h1>\r\n                <p style={{ fontSize: \"19px\" }}>\r\n                    Please add to-dos item(s) through the input field\r\n        </p>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addTodoProps(this.state.title);\r\n        this.setState({\r\n            title: \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">  <input\r\n                type=\"text\"\r\n                className=\"input-text\" placeholder=\"Add todo...\"\r\n                value={this.state.title}\r\n                name=\"title\"\r\n                onChange={this.onChange} />\r\n                \r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" /></form>\r\n        )\r\n    }\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\n// import uuid from \"react-uuid\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n\r\n\r\nclass TodoContainer extends React.Component {\r\n    // state = {\r\n    //     todos: [\r\n    //         {\r\n    //             id: uuid(),\r\n    //             title: \"Setup development environment\",\r\n    //             completed: true\r\n    //         },\r\n    //         {\r\n    //             id: uuid(),\r\n    //             title: \"Develop website and add content\",\r\n    //             completed: false\r\n    //         },\r\n    //         {\r\n    //             id: uuid(),\r\n    //             title: \"Deploy to live server\",\r\n    //             completed: false\r\n    //         }\r\n    //     ]\r\n    // };\r\n\r\n    // https://jsonplaceholder.typicode.com/todos\r\n\r\n    state = {\r\n        todos: [],\r\n    }\r\n\r\n    handleChange = id => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            }),\r\n        })\r\n    }\r\n\r\n    delTodo = id => {\r\n        axios\r\n            .delete(`https://my-json-server.typicode.com/r-alfaro/db/todos/${id}`)\r\n            .then(reponse =>\r\n                this.setState({\r\n                    todos: [\r\n                        ...this.state.todos.filter(todo => {\r\n                            return todo.id !== id\r\n                        }),\r\n                    ],\r\n                })\r\n            )\r\n    }\r\n\r\n    addTodoItem = title => {\r\n        axios\r\n            .post(\"https://my-json-server.typicode.com/r-alfaro/db/todos/\", {\r\n                title: title,\r\n                completed: false,\r\n            })\r\n            .then(response =>\r\n                this.setState({\r\n                    todos: [...this.state.todos, response.data],\r\n                })\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        //axios.get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        axios.get(\"https://my-json-server.typicode.com/r-alfaro/db/todos/\", {\r\n            params: {\r\n                _limit: 999\r\n            }\r\n        })\r\n            .then(response => this.setState({ todos: response.data })\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header headerSpan={this.state.show} />\r\n\r\n                <InputTodo addTodoProps={this.addTodoItem} />\r\n\r\n                <TodosList\r\n                    todos={this.state.todos}\r\n                    handleChangeProps={this.handleChange}\r\n                    deleteTodoProps={this.delTodo} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoContainer","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport TodoContainer from \"./components/TodoContainer\";\r\n//import \"./App.css\";\r\n\r\n// const element = <h1>Hello from Create  React App</h1>\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}